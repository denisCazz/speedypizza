---
import Layout from '../layout/layout.astro';
// Modifica l'importazione: 'menuData' ora si riferisce direttamente all'oggetto JSON.
import * as menuData from '../../menu.json'; 

const nonVegetarianIngredients = [
  "prosciutto", "acciughe", "wurstel", "salamino piccante", "tonno", 
  "salsiccia", "prosciutto crudo", "frutti di mare", "speck", "bresaola", 
  "pancetta", "gamberetti", "'nduja", "porchetta"
];

const spicyIngredients = ["salamino piccante", "peperoncino", "'nduja"];

const pizzas = menuData.pizze.map(pizza => {
  const lowerCaseIngredients = pizza.ingredienti.map(ing => ing.toLowerCase());
  return {
    name: pizza.nome,
    ingredients: pizza.ingredienti.join(', '),
    price: `‚Ç¨ ${pizza.prezzo.toFixed(2)}`,
    isVegetarian: !lowerCaseIngredients.some(ing => nonVegetarianIngredients.includes(ing)),
    isSpicy: lowerCaseIngredients.some(ing => spicyIngredients.includes(ing))
  };
});

const extraInfo = menuData.extra;

// Prepara i dati per lo script client-side
const clientSidePizzas = pizzas.map(p => ({
  name: p.name,
  ingredients: p.ingredients
}));
---

<Layout title="Il Nostro Menu d'Asporto - Speedy Pizza">
  <section class="menu-page section-padding">
    <div class="container">
      <h1 class="text-center">Il Nostro Menu d'Asporto</h1>
      <p class="text-center menu-intro">
        Scopri la nostra selezione di pizze, preparate con ingredienti freschi e amore, pronte da portare via.
        <br />
        Siamo a {menuData.indirizzo}. Per ordini: <a href={`tel:${menuData.telefono.replace(/-/g, '')}`}>{menuData.telefono}</a>
        <br />
        <span class="icon-legend">üåø Vegetariana</span> | <span class="icon-legend">üå∂Ô∏è Piccante</span>
      </p>

      <div class="search-container">
        <input type="text" id="search-bar" placeholder="Cerca per nome o ingrediente..." aria-label="Cerca pizze">
      </div>
      
      <div class="menu-grid">
        {pizzas.map(pizza => (
          <div class="menu-item">
            <h3>
              {pizza.name}
              {pizza.isVegetarian && <span class="icon" title="Vegetariana">üåø</span>}
              {pizza.isSpicy && <span class="icon" title="Piccante">üå∂Ô∏è</span>}
            </h3>
            <p class="ingredients">{pizza.ingredients}</p>
            <p class="price">{pizza.price}</p>
          </div>
        ))}
      </div>

      <div class="menu-info text-center">
        <p>Aggiunta ingredienti: ‚Ç¨ {extraInfo.aggiunta_ingredienti.toFixed(2)}</p>
        <p>Aggiunta Burrata: ‚Ç¨ {extraInfo.aggiunta_burrata.toFixed(2)}</p>
        <p>Aggiunta Patatine: ‚Ç¨ {extraInfo.aggiunta_patatine.toFixed(2)}</p>
        <p>Aggiunta salumi pregiati: ‚Ç¨ {extraInfo.aggiunta_salumi_pregiati.toFixed(2)}</p>
        <p>Aggiunta Mozzarella di Bufala: ‚Ç¨ {extraInfo.aggiunta_bufala.toFixed(2)}</p>
        <p>Sconto Pizza Baby: -‚Ç¨ {extraInfo.pizza_baby_sconto.toFixed(2)}</p>
        <p>Tutte le nostre pizze sono disponibili anche con impasto integrale (supplemento da verificare al momento dell'ordine).</p>
        <p>Per allergeni o richieste particolari, non esitare a chiedere al nostro staff al momento dell'ordine!</p>
      </div>
    </div>
  </section>
</Layout>

<script define:vars={{ clientSidePizzas }}>
  const searchBar = document.getElementById('search-bar');
  const menuItemsNodeList = document.querySelectorAll('.menu-item');
  // Converti NodeList in Array per usare metodi come forEach in browser pi√π vecchi (sebbene querySelectorAll.forEach sia ampiamente supportato)
  const menuItems = Array.from(menuItemsNodeList);

  searchBar.addEventListener('input', (event) => {
    const searchTerm = event.target.value.toLowerCase().trim();

    menuItems.forEach((itemElement, index) => {
      const pizzaData = clientSidePizzas[index];
      
      if (!pizzaData) { // Salvaguardia nel caso gli array non siano allineati
        itemElement.style.display = 'none'; // Nascondi se non ci sono dati corrispondenti
        return;
      }

      const nameMatches = pizzaData.name.toLowerCase().includes(searchTerm);
      const ingredientsMatch = pizzaData.ingredients.toLowerCase().includes(searchTerm);

      if (nameMatches || ingredientsMatch) {
        itemElement.style.display = ''; // Mostra (ripristina display predefinito)
      } else {
        itemElement.style.display = 'none'; // Nascondi
      }
    });
  });
</script>

<style>
  .menu-intro {
    font-size: 1.1rem;
    margin-bottom: 1.5rem;
    color: var(--dark-gray);
  }

  .icon-legend {
    font-size: 0.9rem;
    color: #555;
  }

  .search-container {
    margin-bottom: 3rem;
    display: flex;
    justify-content: center;
    padding: 1.5rem;
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-heavy);
    position: relative;
    overflow: hidden;
  }

  .search-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 100%);
    pointer-events: none;
  }

  #search-bar {
    width: 100%;
    max-width: 500px;
    padding: 1.2rem 1.8rem;
    font-size: 1.2rem;
    font-family: var(--font-primary);
    border: 3px solid transparent;
    border-radius: 50px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    transition: all var(--transition-medium);
    background: white;
    position: relative;
    z-index: 1;
    font-weight: 500;
  }

  #search-bar:focus {
    outline: none;
    border-color: white;
    box-shadow: 0 12px 35px rgba(0,0,0,0.2), 0 0 0 4px rgba(255,255,255,0.3);
    transform: translateY(-3px) scale(1.02);
  }

  #search-bar::placeholder {
    color: var(--medium-gray);
    font-style: italic;
    font-weight: 400;
  }
  
  .menu-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .menu-item {
    background: linear-gradient(135deg, var(--bg-white) 0%, #fefefe 100%);
    padding: 2rem;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-light);
    transition: all var(--transition-medium);
    border: 2px solid transparent;
    position: relative;
    overflow: hidden;
  }

  .menu-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, transparent 0%, rgba(231, 76, 60, 0.02) 100%);
    opacity: 0;
    transition: opacity var(--transition-medium);
    pointer-events: none;
  }

  .menu-item:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-heavy);
    border-color: var(--primary-color);
  }

  .menu-item:hover::before {
    opacity: 1;
  }

  .menu-item h3 {
    color: var(--secondary-color);
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-family: var(--font-heading);
    font-weight: 600;
    display: flex;
    align-items: center;
    position: relative;
    z-index: 1;
  }

  .menu-item h3 .icon {
    margin-left: 0.8rem;
    font-size: 1.2rem;
    filter: drop-shadow(0 1px 2px rgba(0,0,0,0.1));
  }

  .menu-item .ingredients {
    font-size: 1rem;
    color: var(--text-light);
    margin-bottom: 1.5rem;
    min-height: 48px;
    line-height: 1.6;
    position: relative;
    z-index: 1;
  }

  .menu-item .price {
    font-size: 1.4rem;
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: 0;
    font-family: var(--font-heading);
    background: var(--light-gray);
    padding: 0.5rem 1rem;
    border-radius: 25px;
    display: inline-block;
    position: relative;
    z-index: 1;
    box-shadow: 0 2px 8px rgba(231, 76, 60, 0.1);
  }

  .menu-info {
    margin-top: 3rem;
    padding: 2rem;
    background: linear-gradient(135deg, var(--bg-section) 0%, var(--light-gray) 100%);
    border-radius: var(--border-radius);
    border-left: 4px solid var(--primary-color);
    box-shadow: var(--shadow-light);
  }

  .menu-info p {
    margin-bottom: 0.8rem;
    font-size: 1rem;
    color: var(--text-light);
  }

  .menu-info p:last-child {
    margin-bottom: 0;
    font-weight: 500;
    color: var(--text-dark);
  }

  /* Animation for menu items */
  .menu-item {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .menu-item:nth-child(1) { animation-delay: 0.1s; }
  .menu-item:nth-child(2) { animation-delay: 0.2s; }
  .menu-item:nth-child(3) { animation-delay: 0.3s; }
  .menu-item:nth-child(4) { animation-delay: 0.4s; }
  .menu-item:nth-child(5) { animation-delay: 0.5s; }
  .menu-item:nth-child(6) { animation-delay: 0.6s; }
  .menu-item:nth-child(7) { animation-delay: 0.7s; }
  .menu-item:nth-child(8) { animation-delay: 0.8s; }
  .menu-item:nth-child(9) { animation-delay: 0.9s; }

  @media (min-width: 768px) {
    .menu-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .menu-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media (max-width: 768px) {
    .search-container {
      padding: 1rem;
      margin-bottom: 2rem;
    }

    #search-bar {
      padding: 1rem 1.5rem;
      font-size: 1.1rem;
    }

    .menu-item {
      padding: 1.5rem;
    }

    .menu-item h3 {
      font-size: 1.3rem;
    }

    .menu-item .price {
      font-size: 1.2rem;
    }
  }
</style>
